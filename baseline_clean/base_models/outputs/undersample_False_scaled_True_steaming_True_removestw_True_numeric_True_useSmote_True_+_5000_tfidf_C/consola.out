/home/marcelino.maita/.venv/lib/python3.13/site-packages/sklearn/svm/_base.py:305: ConvergenceWarning: Solver terminated early (max_iter=1000).  Consider pre-processing your data with StandardScaler or MinMaxScaler.
  warnings.warn(
/home/marcelino.maita/.venv/lib/python3.13/site-packages/xgboost/training.py:183: UserWarning: [22:10:47] WARNING: /workspace/src/learner.cc:738: 
Parameters: { "use_label_encoder" } are not used.

  bst.update(dtrain, iteration=i, fobj=obj)
For TF-IDF embbedings you are selecteing this columns:
--> ['text', 'Artist(s)', 'song', 'emotion', 'Genre', 'Album', 'Similar Artist 1', 'Similar Song 1', 'Similar Artist 2', 'Similar Song 2', 'Similar Artist 3', 'Similar Song 3', 'song_normalized', 'artist_normalized']
For both embbedings your are adding this columns: 
--> ['Tempo', 'Popularity', 'Energy', 'Danceability', 'Positiveness', 'Speechiness', 'Liveness', 'Acousticness', 'Instrumentalness', 'Good for Party', 'Good for Work/Study', 'Good for Relaxation/Meditation', 'Good for Exercise', 'Good for Running', 'Good for Yoga/Stretching', 'Good for Driving', 'Good for Social Gatherings', 'Good for Morning Routine']
You are executing with [ALL] dataset
--> PaTH:  ../../data/embbedings_khipu/LB_fuss/lb_khipu_C.npy

##################################################
Running experiment with TFIDF embeddings
Preprocessing text...
Label distribution: {0: 82336, 1: 25802}
X shape: (108138, 5000)
y shape: (108138,)

Splitting data...

Data con el spliting...
Label distribution en TRAIN: {0: 65868, 1: 20642}
Label distribution en TEST: {0: 16468, 1: 5160}




Aplicando SMOTE oversampling...
Nueva distribución de clases: {0: 65868, 1: 65868}

==============================
Model: Logistic Regression
Accuracy:  0.8995
Precision: 0.7613
Recall:    0.8432
F1-score:  0.8002
              precision    recall  f1-score   support

           0       0.95      0.92      0.93     16468
           1       0.76      0.84      0.80      5160

    accuracy                           0.90     21628
   macro avg       0.86      0.88      0.87     21628
weighted avg       0.90      0.90      0.90     21628

[[15104  1364]
 [  809  4351]]
Hiperparámetros: {'C': 1, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'deprecated', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
Confusion matrix saved as: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/tfidf/conf_matrix_logistic_regression.png
Modelo guardado como: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/tfidf/logistic_regression_model.pkl

==============================
Model: SVM
Accuracy:  0.5080
Precision: 0.3076
Recall:    0.8492
F1-score:  0.4517
              precision    recall  f1-score   support

           0       0.89      0.40      0.55     16468
           1       0.31      0.85      0.45      5160

    accuracy                           0.51     21628
   macro avg       0.60      0.63      0.50     21628
weighted avg       0.75      0.51      0.53     21628

[[6606 9862]
 [ 778 4382]]
Hiperparámetros: {'C': 1.0, 'break_ties': False, 'cache_size': 200, 'class_weight': None, 'coef0': 0.0, 'decision_function_shape': 'ovr', 'degree': 3, 'gamma': 'scale', 'kernel': 'rbf', 'max_iter': 1000, 'probability': False, 'random_state': 42, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Confusion matrix saved as: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/tfidf/conf_matrix_svm.png
Modelo guardado como: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/tfidf/svm_model.pkl

==============================
Model: Decision Tree
Accuracy:  0.9101
Precision: 0.8007
Recall:    0.8295
F1-score:  0.8149
              precision    recall  f1-score   support

           0       0.95      0.94      0.94     16468
           1       0.80      0.83      0.81      5160

    accuracy                           0.91     21628
   macro avg       0.87      0.88      0.88     21628
weighted avg       0.91      0.91      0.91     21628

[[15403  1065]
 [  880  4280]]
Hiperparámetros: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'entropy', 'max_depth': 10, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
Confusion matrix saved as: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/tfidf/conf_matrix_decision_tree.png
Modelo guardado como: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/tfidf/decision_tree_model.pkl

==============================
Model: Random Forest
Accuracy:  0.8822
Precision: 0.7695
Recall:    0.7229
F1-score:  0.7455
              precision    recall  f1-score   support

           0       0.91      0.93      0.92     16468
           1       0.77      0.72      0.75      5160

    accuracy                           0.88     21628
   macro avg       0.84      0.83      0.83     21628
weighted avg       0.88      0.88      0.88     21628

[[15351  1117]
 [ 1430  3730]]
Hiperparámetros: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': 15, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 200, 'n_jobs': -1, 'oob_score': False, 'random_state': 42, 'verbose': 0, 'warm_start': False}
Confusion matrix saved as: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/tfidf/conf_matrix_random_forest.png
Modelo guardado como: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/tfidf/random_forest_model.pkl

==============================
Model: XGBoost
Accuracy:  0.9369
Precision: 0.8739
Recall:    0.8595
F1-score:  0.8666
              precision    recall  f1-score   support

           0       0.96      0.96      0.96     16468
           1       0.87      0.86      0.87      5160

    accuracy                           0.94     21628
   macro avg       0.92      0.91      0.91     21628
weighted avg       0.94      0.94      0.94     21628

[[15828   640]
 [  725  4435]]
Hiperparámetros: {'objective': 'binary:logistic', 'base_score': None, 'booster': None, 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': 0.8, 'device': None, 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': 'logloss', 'feature_types': None, 'feature_weights': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': 0.1, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': 8, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': 200, 'n_jobs': None, 'num_parallel_tree': None, 'random_state': 42, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': 0.8, 'tree_method': None, 'validate_parameters': None, 'verbosity': None, 'use_label_encoder': False}
Confusion matrix saved as: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/tfidf/conf_matrix_xgboost.png
Modelo guardado como: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/tfidf/xgboost_model.pkl

==============================
Model: Naive Bayes
Accuracy:  0.8715
Precision: 0.7116
Recall:    0.7758
F1-score:  0.7423
              precision    recall  f1-score   support

           0       0.93      0.90      0.91     16468
           1       0.71      0.78      0.74      5160

    accuracy                           0.87     21628
   macro avg       0.82      0.84      0.83     21628
weighted avg       0.88      0.87      0.87     21628

[[14846  1622]
 [ 1157  4003]]
Hiperparámetros: {'alpha': 1.0, 'class_prior': None, 'fit_prior': True, 'force_alpha': True}
/home/marcelino.maita/.venv/lib/python3.13/site-packages/sklearn/svm/_base.py:305: ConvergenceWarning: Solver terminated early (max_iter=1000).  Consider pre-processing your data with StandardScaler or MinMaxScaler.
  warnings.warn(
/home/marcelino.maita/.venv/lib/python3.13/site-packages/xgboost/training.py:183: UserWarning: [22:40:32] WARNING: /workspace/src/learner.cc:738: 
Parameters: { "use_label_encoder" } are not used.

  bst.update(dtrain, iteration=i, fobj=obj)
Confusion matrix saved as: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/tfidf/conf_matrix_naive_bayes.png
Modelo guardado como: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/tfidf/naive_bayes_model.pkl


Resumen de métricas:
XGBoost: {'accuracy': 0.9369, 'precision': 0.8739, 'recall': 0.8595, 'f1_score': 0.8666}
Decision Tree: {'accuracy': 0.9101, 'precision': 0.8007, 'recall': 0.8295, 'f1_score': 0.8149}
Logistic Regression: {'accuracy': 0.8995, 'precision': 0.7613, 'recall': 0.8432, 'f1_score': 0.8002}
Random Forest: {'accuracy': 0.8822, 'precision': 0.7695, 'recall': 0.7229, 'f1_score': 0.7455}
Naive Bayes: {'accuracy': 0.8715, 'precision': 0.7116, 'recall': 0.7758, 'f1_score': 0.7423}
SVM: {'accuracy': 0.508, 'precision': 0.3076, 'recall': 0.8492, 'f1_score': 0.4517}

##################################################
Running experiment with LYRICS_BERT embeddings
Loading Lb vectors from:  ../../data/spotify_dataset_sin_duplicados_4.csv
Label distribution: {0: 82336, 1: 25802}
X shape: (108138, 300)
y shape: (108138,)

Splitting data...

Data con el spliting...
Label distribution en TRAIN: {0: 65868, 1: 20642}
Label distribution en TEST: {0: 16468, 1: 5160}




Aplicando SMOTE oversampling...
Nueva distribución de clases: {0: 65868, 1: 65868}

==============================
Model: Logistic Regression
Accuracy:  0.8418
Precision: 0.6332
Recall:    0.8008
F1-score:  0.7072
              precision    recall  f1-score   support

           0       0.93      0.85      0.89     16468
           1       0.63      0.80      0.71      5160

    accuracy                           0.84     21628
   macro avg       0.78      0.83      0.80     21628
weighted avg       0.86      0.84      0.85     21628

[[14074  2394]
 [ 1028  4132]]
Hiperparámetros: {'C': 1, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'deprecated', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
Confusion matrix saved as: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/lyrics_bert/conf_matrix_logistic_regression.png
Modelo guardado como: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/lyrics_bert/logistic_regression_model.pkl

==============================
Model: SVM
Accuracy:  0.3155
Precision: 0.2522
Recall:    0.9510
F1-score:  0.3987
              precision    recall  f1-score   support

           0       0.88      0.12      0.21     16468
           1       0.25      0.95      0.40      5160

    accuracy                           0.32     21628
   macro avg       0.57      0.53      0.30     21628
weighted avg       0.73      0.32      0.25     21628

[[ 1917 14551]
 [  253  4907]]
Hiperparámetros: {'C': 1.0, 'break_ties': False, 'cache_size': 200, 'class_weight': None, 'coef0': 0.0, 'decision_function_shape': 'ovr', 'degree': 3, 'gamma': 'scale', 'kernel': 'rbf', 'max_iter': 1000, 'probability': False, 'random_state': 42, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Confusion matrix saved as: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/lyrics_bert/conf_matrix_svm.png
Modelo guardado como: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/lyrics_bert/svm_model.pkl

==============================
Model: Decision Tree
Accuracy:  0.8185
Precision: 0.6037
Recall:    0.6969
F1-score:  0.6469
              precision    recall  f1-score   support

           0       0.90      0.86      0.88     16468
           1       0.60      0.70      0.65      5160

    accuracy                           0.82     21628
   macro avg       0.75      0.78      0.76     21628
weighted avg       0.83      0.82      0.82     21628

[[14107  2361]
 [ 1564  3596]]
Hiperparámetros: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'entropy', 'max_depth': 10, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
Confusion matrix saved as: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/lyrics_bert/conf_matrix_decision_tree.png
Modelo guardado como: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/lyrics_bert/decision_tree_model.pkl

==============================
Model: Random Forest
Accuracy:  0.8451
Precision: 0.6673
Recall:    0.6992
F1-score:  0.6829
              precision    recall  f1-score   support

           0       0.90      0.89      0.90     16468
           1       0.67      0.70      0.68      5160

    accuracy                           0.85     21628
   macro avg       0.79      0.79      0.79     21628
weighted avg       0.85      0.85      0.85     21628

[[14669  1799]
 [ 1552  3608]]
Hiperparámetros: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': 15, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 200, 'n_jobs': -1, 'oob_score': False, 'random_state': 42, 'verbose': 0, 'warm_start': False}
Confusion matrix saved as: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/lyrics_bert/conf_matrix_random_forest.png
Modelo guardado como: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/lyrics_bert/random_forest_model.pkl

==============================
Model: XGBoost
Accuracy:  0.8908
Precision: 0.7982
Recall:    0.7258
F1-score:  0.7603
              precision    recall  f1-score   support

           0       0.92      0.94      0.93     16468
           1       0.80      0.73      0.76      5160

    accuracy                           0.89     21628
   macro avg       0.86      0.83      0.84     21628
weighted avg       0.89      0.89      0.89     21628

[[15521   947]
 [ 1415  3745]]
Hiperparámetros: {'objective': 'binary:logistic', 'base_score': None, 'booster': None, 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': 0.8, 'device': None, 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': 'logloss', 'feature_types': None, 'feature_weights': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': 0.1, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': 8, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': 200, 'n_jobs': None, 'num_parallel_tree': None, 'random_state': 42, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': 0.8, 'tree_method': None, 'validate_parameters': None, 'verbosity': None, 'use_label_encoder': False}
Confusion matrix saved as: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/lyrics_bert/conf_matrix_xgboost.png
Modelo guardado como: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/lyrics_bert/xgboost_model.pkl

==============================
Model: Naive Bayes
Accuracy:  0.7138
Precision: 0.4380
Recall:    0.7056
F1-score:  0.5405
              precision    recall  f1-score   support

           0       0.89      0.72      0.79     16468
           1       0.44      0.71      0.54      5160

    accuracy                           0.71     21628
   macro avg       0.66      0.71      0.67     21628
weighted avg       0.78      0.71      0.73     21628

[[11797  4671]
 [ 1519  3641]]
Hiperparámetros: {'priors': None, 'var_smoothing': 1e-09}
Confusion matrix saved as: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/lyrics_bert/conf_matrix_naive_bayes.png
Modelo guardado como: outputs/undersample_False_scaled_True_steaming_True_removestw_True_numeric_True_useSmote_True_+_5000_tfidf_C/lyrics_bert/naive_bayes_model.pkl


Resumen de métricas:
XGBoost: {'accuracy': 0.8908, 'precision': 0.7982, 'recall': 0.7258, 'f1_score': 0.7603}
Logistic Regression: {'accuracy': 0.8418, 'precision': 0.6332, 'recall': 0.8008, 'f1_score': 0.7072}
Random Forest: {'accuracy': 0.8451, 'precision': 0.6673, 'recall': 0.6992, 'f1_score': 0.6829}
Decision Tree: {'accuracy': 0.8185, 'precision': 0.6037, 'recall': 0.6969, 'f1_score': 0.6469}
Naive Bayes: {'accuracy': 0.7138, 'precision': 0.438, 'recall': 0.7056, 'f1_score': 0.5405}
SVM: {'accuracy': 0.3155, 'precision': 0.2522, 'recall': 0.951, 'f1_score': 0.3987}

You are executing with this configuration: undersample_False_scaled_True_removestw_True_5000tfidf
